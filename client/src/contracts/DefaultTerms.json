{
  "contractName": "DefaultTerms",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "defaultTerms",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDefaultTerms",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"defaultTerms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultTerms\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DefaultTerms.sol\":\"DefaultTerms\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DefaultTerms.sol\":{\"keccak256\":\"0xca4324dea56137108df86cfa2407e93a70a355431f5edad4ba6ed6fead96329d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb3bc96b2a140524e4c9a50b9d242516dc625a67df15128d7e8a2c0932e6c641\",\"dweb:/ipfs/QmU1AgJMqEWFAQKgbc9y8vCjf4TmiRjeC85ji2j9scYFtQ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80633c0cf8b41461003b578063c6418ab91461006b575b600080fd5b61005560048036038101906100509190610249565b610089565b6040516100629190610306565b60405180910390f35b610073610135565b6040516100809190610434565b60405180910390f35b6000818154811061009957600080fd5b9060005260206000200160009150905080546100b490610485565b80601f01602080910402602001604051908101604052809291908181526020018280546100e090610485565b801561012d5780601f106101025761010080835404028352916020019161012d565b820191906000526020600020905b81548152906001019060200180831161011057829003601f168201915b505050505081565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561020557838290600052602060002001805461017890610485565b80601f01602080910402602001604051908101604052809291908181526020018280546101a490610485565b80156101f15780601f106101c6576101008083540402835291602001916101f1565b820191906000526020600020905b8154815290600101906020018083116101d457829003601f168201915b505050505081526020019060010190610159565b50505050905090565b600080fd5b6000819050919050565b61022681610213565b811461023157600080fd5b50565b6000813590506102438161021d565b92915050565b60006020828403121561025f5761025e61020e565b5b600061026d84828501610234565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102b0578082015181840152602081019050610295565b60008484015250505050565b6000601f19601f8301169050919050565b60006102d882610276565b6102e28185610281565b93506102f2818560208601610292565b6102fb816102bc565b840191505092915050565b6000602082019050818103600083015261032081846102cd565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061037082610276565b61037a8185610354565b935061038a818560208601610292565b610393816102bc565b840191505092915050565b60006103aa8383610365565b905092915050565b6000602082019050919050565b60006103ca82610328565b6103d48185610333565b9350836020820285016103e685610344565b8060005b858110156104225784840389528151610403858261039e565b945061040e836103b2565b925060208a019950506001810190506103ea565b50829750879550505050505092915050565b6000602082019050818103600083015261044e81846103bf565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061049d57607f821691505b6020821081036104b0576104af610456565b5b5091905056fea26469706673582212205956598e2f3c1c132fbda437496888de4bc9a8505dfef7b8ba8b34a878a75c1064736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5231:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:6",
                "type": ""
              }
            ],
            "src": "7:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "140:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "157:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "150:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "150:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "150:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "254:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "278:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "281:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "271:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "271:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "271:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "112:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "326:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "346:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "336:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:4:6",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "467:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:15:6"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "298:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "535:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "545:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "559:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "565:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "555:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "555:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "545:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "576:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "606:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "580:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "653:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "667:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "677:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "677:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "667:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "633:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "626:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "623:81:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "756:42:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "770:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "770:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "770:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "720:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "751:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "740:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "717:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "714:84:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "519:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "528:6:6",
                "type": ""
              }
            ],
            "src": "484:320:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "874:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "882:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "874:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "902:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "905:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "895:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:14:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:14:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "926:9:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "851:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "859:4:6",
                "type": ""
              }
            ],
            "src": "810:141:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1001:49:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1011:33:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1029:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1025:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:14:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1041:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1021:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "divide_by_32_ceil",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "984:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "994:6:6",
                "type": ""
              }
            ],
            "src": "957:93:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1109:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1119:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "1144:4:6"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1150:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:16:6"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "1119:8:6"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "1084:4:6",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1090:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "1100:8:6",
                "type": ""
              }
            ],
            "src": "1056:107:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1245:317:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1255:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBytes",
                        "nodeType": "YulIdentifier",
                        "src": "1276:10:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:1:6",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:6"
                  },
                  "variables": [
                    {
                      "name": "shiftBits",
                      "nodeType": "YulTypedName",
                      "src": "1259:9:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:109:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1311:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:97:6"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "1303:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:51:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:6"
                      },
                      {
                        "name": "toInsert",
                        "nodeType": "YulIdentifier",
                        "src": "1459:8:6"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1429:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "toInsert",
                      "nodeType": "YulIdentifier",
                      "src": "1417:8:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1477:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1490:5:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1501:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1486:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1477:5:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:40:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1529:5:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "toInsert",
                            "nodeType": "YulIdentifier",
                            "src": "1540:8:6"
                          },
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1550:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1526:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:30:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1516:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "update_byte_slice_dynamic32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1206:5:6",
                "type": ""
              },
              {
                "name": "shiftBytes",
                "nodeType": "YulTypedName",
                "src": "1213:10:6",
                "type": ""
              },
              {
                "name": "toInsert",
                "nodeType": "YulTypedName",
                "src": "1225:8:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1238:6:6",
                "type": ""
              }
            ],
            "src": "1169:393:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1613:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1623:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1634:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1623:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1595:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1605:7:6",
                "type": ""
              }
            ],
            "src": "1568:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1683:28:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:12:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1700:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1693:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1669:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1679:3:6",
                "type": ""
              }
            ],
            "src": "1651:60:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1777:82:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:66:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1845:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1827:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1827:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1818:8:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:34:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1800:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:53:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1787:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1757:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1767:9:6",
                "type": ""
              }
            ],
            "src": "1717:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:28:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1922:12:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1929:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1922:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "prepare_store_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1898:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1908:3:6",
                "type": ""
              }
            ],
            "src": "1865:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2022:193:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2032:63:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_0",
                        "nodeType": "YulIdentifier",
                        "src": "2087:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2056:30:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:39:6"
                  },
                  "variables": [
                    {
                      "name": "convertedValue_0",
                      "nodeType": "YulTypedName",
                      "src": "2036:16:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2111:4:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2151:4:6"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "2145:5:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2145:11:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "convertedValue_0",
                                "nodeType": "YulIdentifier",
                                "src": "2190:16:6"
                              }
                            ],
                            "functionName": {
                              "name": "prepare_store_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2166:23:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2166:41:6"
                          }
                        ],
                        "functionName": {
                          "name": "update_byte_slice_dynamic32",
                          "nodeType": "YulIdentifier",
                          "src": "2117:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:91:6"
                      }
                    ],
                    "functionName": {
                      "name": "sstore",
                      "nodeType": "YulIdentifier",
                      "src": "2104:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:105:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2104:105:6"
                }
              ]
            },
            "name": "update_storage_value_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "1999:4:6",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2005:6:6",
                "type": ""
              },
              {
                "name": "value_0",
                "nodeType": "YulTypedName",
                "src": "2013:7:6",
                "type": ""
              }
            ],
            "src": "1946:269:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2270:24:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2280:8:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2287:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2280:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "zero_value_for_split_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2266:3:6",
                "type": ""
              }
            ],
            "src": "2221:73:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2353:136:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2363:46:6",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "zero_value_for_split_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2377:30:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:32:6"
                  },
                  "variables": [
                    {
                      "name": "zero_0",
                      "nodeType": "YulTypedName",
                      "src": "2367:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2462:4:6"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2468:6:6"
                      },
                      {
                        "name": "zero_0",
                        "nodeType": "YulIdentifier",
                        "src": "2476:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "update_storage_value_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2418:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:65:6"
                }
              ]
            },
            "name": "storage_set_to_zero_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "2339:4:6",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2345:6:6",
                "type": ""
              }
            ],
            "src": "2300:189:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:136:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2612:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2656:5:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2663:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "storage_set_to_zero_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "2626:29:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "2565:5:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2572:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2562:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:14:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2577:26:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2579:22:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2592:5:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2599:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2588:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2588:13:6"
                        },
                        "variableNames": [
                          {
                            "name": "start",
                            "nodeType": "YulIdentifier",
                            "src": "2579:5:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2559:2:6",
                    "statements": []
                  },
                  "src": "2555:120:6"
                }
              ]
            },
            "name": "clear_storage_range_t_bytes1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "2533:5:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2540:3:6",
                "type": ""
              }
            ],
            "src": "2495:186:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:464:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2792:431:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2806:54:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "2854:5:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_dataslot_t_string_storage",
                            "nodeType": "YulIdentifier",
                            "src": "2822:31:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2822:38:6"
                        },
                        "variables": [
                          {
                            "name": "dataArea",
                            "nodeType": "YulTypedName",
                            "src": "2810:8:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2873:63:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "dataArea",
                              "nodeType": "YulIdentifier",
                              "src": "2896:8:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "2924:10:6"
                                }
                              ],
                              "functionName": {
                                "name": "divide_by_32_ceil",
                                "nodeType": "YulIdentifier",
                                "src": "2906:17:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2906:29:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2892:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:44:6"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "2877:11:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3093:27:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3095:23:6",
                              "value": {
                                "name": "dataArea",
                                "nodeType": "YulIdentifier",
                                "src": "3110:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3095:11:6"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "3077:10:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3089:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3074:2:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3074:18:6"
                        },
                        "nodeType": "YulIf",
                        "src": "3071:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "3162:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "dataArea",
                                  "nodeType": "YulIdentifier",
                                  "src": "3179:8:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "divide_by_32_ceil",
                                    "nodeType": "YulIdentifier",
                                    "src": "3189:17:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3189:22:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3175:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3175:37:6"
                            }
                          ],
                          "functionName": {
                            "name": "clear_storage_range_t_bytes1",
                            "nodeType": "YulIdentifier",
                            "src": "3133:28:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3133:80:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3133:80:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "2783:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2788:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2780:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:11:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2777:446:6"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2742:5:6",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2749:3:6",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "2754:10:6",
                "type": ""
              }
            ],
            "src": "2687:543:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3299:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3309:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "3334:4:6"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3340:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3330:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3330:16:6"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "3309:8:6"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_unsigned_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "3274:4:6",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3280:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "3290:8:6",
                "type": ""
              }
            ],
            "src": "3236:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3410:118:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3420:68:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3469:1:6",
                                "type": "",
                                "value": "8"
                              },
                              {
                                "name": "bytes",
                                "nodeType": "YulIdentifier",
                                "src": "3472:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "3465:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3465:13:6"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3484:1:6",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3480:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3480:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_unsigned_dynamic",
                          "nodeType": "YulIdentifier",
                          "src": "3436:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:51:6"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3432:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:56:6"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "3424:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3497:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3511:4:6"
                      },
                      {
                        "name": "mask",
                        "nodeType": "YulIdentifier",
                        "src": "3517:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3507:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:15:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "mask_bytes_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3387:4:6",
                "type": ""
              },
              {
                "name": "bytes",
                "nodeType": "YulTypedName",
                "src": "3393:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3403:6:6",
                "type": ""
              }
            ],
            "src": "3359:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:214:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3774:4:6"
                      },
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "3780:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "mask_bytes_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "3755:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3747:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3804:4:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3814:1:6",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "3817:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "3810:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3810:11:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3801:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "3793:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3595:4:6",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3601:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "3609:4:6",
                "type": ""
              }
            ],
            "src": "3533:295:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3925:1303:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3936:51:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3983:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3950:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:37:6"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "3940:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4072:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4074:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4074:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4074:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4044:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4052:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4041:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4038:56:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4104:52:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "4150:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "4144:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4144:11:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "4118:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:38:6"
                  },
                  "variables": [
                    {
                      "name": "oldLen",
                      "nodeType": "YulTypedName",
                      "src": "4108:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "4249:4:6"
                      },
                      {
                        "name": "oldLen",
                        "nodeType": "YulIdentifier",
                        "src": "4255:6:6"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4263:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_t_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "4203:45:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4203:67:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4280:18:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4297:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "4284:9:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:17:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4321:4:6",
                    "type": "",
                    "value": "0x20"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "4308:9:6"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4372:611:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4386:37:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4417:4:6",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4413:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4413:9:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4401:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4401:22:6"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "4390:7:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4437:51:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:4:6"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "4451:31:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4451:37:6"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "4441:6:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4501:10:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4510:1:6",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "4505:1:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4569:163:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4594:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "4612:3:6"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4617:9:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4608:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4608:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4602:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4602:26:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4587:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4587:42:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4587:42:6"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4646:24:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4660:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4668:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4656:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4656:14:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4646:6:6"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4687:31:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4704:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4715:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4700:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4700:18:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "4687:9:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4535:1:6"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:7:6"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4532:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4532:14:6"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "4547:21:6",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4549:17:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4558:1:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4561:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4554:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4554:12:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4549:1:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "4528:3:6",
                              "statements": []
                            },
                            "src": "4524:208:6"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4768:156:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4786:43:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "4813:3:6"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4818:9:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4809:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4809:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4803:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4803:26:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "4790:9:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4853:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "4880:9:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "newLen",
                                                "nodeType": "YulIdentifier",
                                                "src": "4895:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4903:4:6",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "4891:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4891:17:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mask_bytes_dynamic",
                                          "nodeType": "YulIdentifier",
                                          "src": "4861:18:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4861:48:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4846:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4846:64:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4846:64:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:7:6"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4760:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4748:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4748:19:6"
                            },
                            "nodeType": "YulIf",
                            "src": "4745:179:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4944:4:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4958:6:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4966:1:6",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "4954:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4954:14:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4970:1:6",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4950:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4950:22:6"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "4937:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4937:36:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4937:36:6"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4365:618:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4370:1:6",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5000:222:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5014:14:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5027:1:6",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "5018:5:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5051:67:6",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5069:35:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5088:3:6"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5093:9:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5084:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5084:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5078:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5078:26:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:5:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "5044:6:6"
                            },
                            "nodeType": "YulIf",
                            "src": "5041:77:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5138:4:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5197:5:6"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5204:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5144:52:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5144:67:6"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5131:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5131:81:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5131:81:6"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4992:230:6",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4345:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4342:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4342:14:6"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4335:887:6"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "3914:4:6",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3920:3:6",
                "type": ""
              }
            ],
            "src": "3833:1395:6"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5657:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:6",
                "type": ""
              }
            ],
            "src": "417:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:6",
                "type": ""
              }
            ],
            "src": "545:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:6",
                "type": ""
              }
            ],
            "src": "690:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1084:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1095:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1111:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1105:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1105:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1095:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1067:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1077:6:6",
                "type": ""
              }
            ],
            "src": "1025:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1226:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1243:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1248:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1236:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1236:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1283:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1279:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1279:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1264:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1198:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1203:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1214:11:6",
                "type": ""
              }
            ],
            "src": "1130:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:184:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1377:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1386:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1381:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1446:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1476:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1467:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1467:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1490:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1495:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1486:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1486:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1480:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1480:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1460:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1460:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1460:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1407:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1410:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1404:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1418:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1420:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1429:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1432:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1425:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1425:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1420:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1400:3:6",
                    "statements": []
                  },
                  "src": "1396:113:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1529:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1534:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1525:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:16:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1543:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:27:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1518:27:6"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1349:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1354:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1359:6:6",
                "type": ""
              }
            ],
            "src": "1305:246:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1605:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1615:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1633:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1640:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1649:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1645:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1625:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1625:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1615:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1588:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1598:6:6",
                "type": ""
              }
            ],
            "src": "1557:102:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1757:285:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1767:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1814:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1781:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1781:39:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1771:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1829:78:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1895:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1900:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1836:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:71:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1829:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1955:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1962:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1951:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1951:16:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1969:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1974:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "1916:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1916:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1916:65:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1990:46:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2001:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2028:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2006:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2006:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1997:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1990:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1738:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1745:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1753:3:6",
                "type": ""
              }
            ],
            "src": "1665:377:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2166:195:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2176:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2188:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2184:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2184:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2176:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2223:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2234:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2219:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2219:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2242:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2248:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2238:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2238:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2212:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2212:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2212:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2268:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2340:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2349:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2276:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2276:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2268:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2138:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2150:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2161:4:6",
                "type": ""
              }
            ],
            "src": "2048:313:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2451:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2462:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2478:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2472:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2462:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2434:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2444:6:6",
                "type": ""
              }
            ],
            "src": "2367:124:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2618:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2635:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2640:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2628:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2628:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2656:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2675:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2680:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2671:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2671:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2656:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2590:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2595:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2606:11:6",
                "type": ""
              }
            ],
            "src": "2497:194:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2779:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2789:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "2797:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2789:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2810:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2822:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2827:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2818:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2818:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2810:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2766:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2774:4:6",
                "type": ""
              }
            ],
            "src": "2697:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2931:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2948:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2953:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2941:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2941:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2969:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2988:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2993:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2984:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2984:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2969:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2903:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2908:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2919:11:6",
                "type": ""
              }
            ],
            "src": "2845:159:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3092:275:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3102:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3149:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3116:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3116:39:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3106:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3164:68:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3220:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3225:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3171:48:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:61:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3164:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3280:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3287:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3276:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3276:16:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3294:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3299:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3241:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3241:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3241:65:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3315:46:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3326:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3353:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3331:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3322:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3322:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3315:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3073:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3080:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3088:3:6",
                "type": ""
              }
            ],
            "src": "3010:357:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3473:96:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:80:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3551:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3559:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3497:53:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3497:66:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3483:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3446:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3454:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3462:10:6",
                "type": ""
              }
            ],
            "src": "3373:196:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3670:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3682:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3687:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3678:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3678:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "3670:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3647:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "3655:4:6",
                "type": ""
              }
            ],
            "src": "3575:123:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3876:847:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3886:78:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3958:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3900:57:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:64:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3890:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3973:103:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4064:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4069:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3980:83:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3980:96:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3973:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4085:20:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4102:3:6"
                  },
                  "variables": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "4089:9:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4114:39:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4130:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4139:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4147:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4126:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:27:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4118:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4162:81:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4237:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4177:59:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:66:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4166:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4252:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4266:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4256:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4342:336:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4363:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4372:4:6"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4378:9:6"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4368:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4368:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4356:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4356:33:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4356:33:6"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4402:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4429:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4423:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4423:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4406:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4449:92:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4521:13:6"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4536:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4457:63:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4457:84:6"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4449:4:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4554:80:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4627:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4564:62:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4564:70:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4554:6:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4647:21:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4658:3:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4663:4:6",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4654:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4654:14:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4647:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4304:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4307:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4301:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4315:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4317:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4326:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4329:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4322:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4322:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4317:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4286:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4288:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4297:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4292:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4282:396:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4687:11:6",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4694:4:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4687:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4707:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4714:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4707:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3855:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3862:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3871:3:6",
                "type": ""
              }
            ],
            "src": "3732:991:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4897:245:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4907:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4919:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4930:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4915:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4907:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4954:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4965:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4950:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4973:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4979:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4969:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4969:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4943:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4943:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4943:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4999:136:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5121:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5130:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5007:113:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:128:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4999:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4869:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4881:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4892:4:6",
                "type": ""
              }
            ],
            "src": "4729:413:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5176:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5193:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5196:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5186:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5290:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5293:4:6",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5283:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5283:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5314:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5317:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5307:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5307:15:6"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "5148:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5385:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5395:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5409:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5415:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5405:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5405:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5395:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5426:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5456:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5462:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5452:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5430:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5503:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5517:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5531:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5539:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5527:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5527:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5517:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5483:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5476:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5473:81:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5606:42:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "5620:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5620:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5620:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5570:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5593:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5601:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5590:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5590:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5567:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5564:84:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5369:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5378:6:6",
                "type": ""
              }
            ],
            "src": "5334:320:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:6025:1:-:0;;;127:5843;;;;;;;;;;208:12;:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;340:12;:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;460:12;:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;604:12;:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;742:12;:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;896:12;:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1069:12;:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1227:12;:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1377:12;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1500:12;:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1662:12;:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1835:12;:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1996:12;:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2157:12;:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2358:12;:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2545:12;:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2721:12;:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2910:12;:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3139:12;:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3309:12;:217;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3539:12;:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3715:12;:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3883:12;:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4021:12;:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4260:12;:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4489:12;:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4645:12;:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4859:12;:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5095:12;:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5280:12;:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5452:12;:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5641:12;:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5778:12;:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;61:6025;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;61:6025:1:-;;;;;;;",
  "deployedSourceMap": "61:6025:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;90:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5978:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;90:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5978:105::-;6028:15;6063:12;6056:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5978:105;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:246::-;1386:1;1396:113;1410:6;1407:1;1404:13;1396:113;;;1495:1;1490:3;1486:11;1480:18;1476:1;1471:3;1467:11;1460:39;1432:2;1429:1;1425:10;1420:15;;1396:113;;;1543:1;1534:6;1529:3;1525:16;1518:27;1367:184;1305:246;;;:::o;1557:102::-;1598:6;1649:2;1645:7;1640:2;1633:5;1629:14;1625:28;1615:38;;1557:102;;;:::o;1665:377::-;1753:3;1781:39;1814:5;1781:39;:::i;:::-;1836:71;1900:6;1895:3;1836:71;:::i;:::-;1829:78;;1916:65;1974:6;1969:3;1962:4;1955:5;1951:16;1916:65;:::i;:::-;2006:29;2028:6;2006:29;:::i;:::-;2001:3;1997:39;1990:46;;1757:285;1665:377;;;;:::o;2048:313::-;2161:4;2199:2;2188:9;2184:18;2176:26;;2248:9;2242:4;2238:20;2234:1;2223:9;2219:17;2212:47;2276:78;2349:4;2340:6;2276:78;:::i;:::-;2268:86;;2048:313;;;;:::o;2367:124::-;2444:6;2478:5;2472:12;2462:22;;2367:124;;;:::o;2497:194::-;2606:11;2640:6;2635:3;2628:19;2680:4;2675:3;2671:14;2656:29;;2497:194;;;;:::o;2697:142::-;2774:4;2797:3;2789:11;;2827:4;2822:3;2818:14;2810:22;;2697:142;;;:::o;2845:159::-;2919:11;2953:6;2948:3;2941:19;2993:4;2988:3;2984:14;2969:29;;2845:159;;;;:::o;3010:357::-;3088:3;3116:39;3149:5;3116:39;:::i;:::-;3171:61;3225:6;3220:3;3171:61;:::i;:::-;3164:68;;3241:65;3299:6;3294:3;3287:4;3280:5;3276:16;3241:65;:::i;:::-;3331:29;3353:6;3331:29;:::i;:::-;3326:3;3322:39;3315:46;;3092:275;3010:357;;;;:::o;3373:196::-;3462:10;3497:66;3559:3;3551:6;3497:66;:::i;:::-;3483:80;;3373:196;;;;:::o;3575:123::-;3655:4;3687;3682:3;3678:14;3670:22;;3575:123;;;:::o;3732:991::-;3871:3;3900:64;3958:5;3900:64;:::i;:::-;3980:96;4069:6;4064:3;3980:96;:::i;:::-;3973:103;;4102:3;4147:4;4139:6;4135:17;4130:3;4126:27;4177:66;4237:5;4177:66;:::i;:::-;4266:7;4297:1;4282:396;4307:6;4304:1;4301:13;4282:396;;;4378:9;4372:4;4368:20;4363:3;4356:33;4429:6;4423:13;4457:84;4536:4;4521:13;4457:84;:::i;:::-;4449:92;;4564:70;4627:6;4564:70;:::i;:::-;4554:80;;4663:4;4658:3;4654:14;4647:21;;4342:336;4329:1;4326;4322:9;4317:14;;4282:396;;;4286:14;4694:4;4687:11;;4714:3;4707:10;;3876:847;;;;;3732:991;;;;:::o;4729:413::-;4892:4;4930:2;4919:9;4915:18;4907:26;;4979:9;4973:4;4969:20;4965:1;4954:9;4950:17;4943:47;5007:128;5130:4;5121:6;5007:128;:::i;:::-;4999:136;;4729:413;;;;:::o;5148:180::-;5196:77;5193:1;5186:88;5293:4;5290:1;5283:15;5317:4;5314:1;5307:15;5334:320;5378:6;5415:1;5409:4;5405:12;5395:22;;5462:1;5456:4;5452:12;5483:18;5473:81;;5539:4;5531:6;5527:17;5517:27;;5473:81;5601:2;5593:6;5590:14;5570:18;5567:38;5564:84;;5620:18;;:::i;:::-;5564:84;5385:269;5334:320;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract DefaultTerms {\r\n    string[] public defaultTerms;\r\n\r\n    constructor() {\r\n        // Initialize default terms in the constructor\r\n        defaultTerms.push(\r\n            \"LANDLORD: The party who owns the property and is leasing it to the tenant.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"TENANT: The party who is renting the property from the lessor.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"LEASE DURATION: The duration for which the property is being leased (e.g., 12 months).\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"RENT AMOUNT: The amount paid by the tenant to the lessor for using the property.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"RENT PAYMENT: The amount paid by the tenant to the lessor must be paid on the 1st of each month.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"LATE RENT: There is a grace period of 1 week for late rent, after which a 2% fine must be added to the rent amount.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"SECURITY DEPOSIT: A refundable amount paid by the tenant as security against damages or unpaid rent.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"UTILITIES: Services such as water, electricity, and gas are not included in the rent amount.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"UTILITIES: All utility services bills must be paid by the tenant.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"MAINTENANCE: Tenant is responsible for minor maintenance (e.g., changing light bulbs, regular cleaning).\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"MAINTENANCE: Landlord is responsible for major repairs and maintenance (e.g., plumbing issues, structural repairs).\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"MAINTENANCE: A dispute can be raised by the tenant and resolved by the landlord through renting portal.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"SUBLEASING: Property must only be used for residential purposes only, no subleasing without permission.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"ALTERATIONS: Tenant must obtain written permission from the landlord before making any alterations, improvements, or additions to the property.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"GUESTS: Tenant agrees to be responsible for the conduct of their guests on the property and ensures they comply with lease terms.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"NOTICE OF ABSENCE: Tenant agrees to notify the landlord if they will be away from the property for an extended period.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"EMERGENCY CONTACTS: Tenant must provide emergency contact information, such as a designated person to reach in case of emergencies.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"PROPERTY DAMAGE: Tenant agrees to report any damages caused by them or their guests promptly and is responsible for repairing or reimbursing the landlord for such damages.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"WASTE DISPOSAL: Tenant agrees to dispose of waste properly, following local ordinances and recycling guidelines.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"FIRE SAFETY: Tenant agrees to follow fire safety regulations, such as not blocking exits, keeping smoke detectors operational, and not tampering with fire safety equipment.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"HOUSING CODE COMPLIANCE: Landlord agrees that the property complies with all applicable housing codes and regulations.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"ENTRY: Landlord has the right to enter the property for inspections, repairs, or showings, with 1 week notice.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"TERMINATION: Conditions under which the lease can be terminated by either party.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"LANDLORD EARLY TERMINATION: If landlord terminates the agreement before termination date, the tenant will be allowed to stay on the property for 1 month rent free before moving out.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"TENANT EARLY TERMINATION: If tenant terminates the agreement before termination date, the landlord is entitled to 1 month rent which is deducted from the security deposit.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"RENEWAL: After termination date a contract may be renewed by the tenant by rebooking the property.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"PROPERTY FOR SALE: Tenant agrees to allow the property to be shown to potential buyers or renters with 1 month notice and rent free stay, from the landlord.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"NON-DISCRIMINATION: Both parties agree to comply with fair housing laws and not discriminate based on race, color, religion, sex, national origin, disability, or familial status.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"NOTICE DELIVERY: Notices and communications between landlord and tenant can be delivered in person, by mail, or electronically.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"NOTICE PERIOD: A notice period of 1 month must be issued before terminating the lease by both landlord and tenant.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"NOTICE OF SALE: Tenant must be notified in advance if the property is being sold, with details on the new owner's responsibilities.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"SIGNATURES: Both parties must approve the agreement to make it legally binding.\"\r\n        );\r\n\r\n        defaultTerms.push(\r\n            \"ENTIRE AGREEMENT: This contract constitutes the entire agreement between the parties and supersedes any prior agreements or understandings.\"\r\n        );\r\n    }\r\n\r\n    function getDefaultTerms() external view returns (string[] memory) {\r\n        return defaultTerms;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\usman\\OneDrive\\Documents\\FYO\\TranspaRent FYP2\\TranspaRent_v2\\TranspaRent_v2\\Blockchain\\contracts\\DefaultTerms.sol",
  "ast": {
    "absolutePath": "project:/contracts/DefaultTerms.sol",
    "exportedSymbols": {
      "DefaultTerms": [
        1696
      ]
    },
    "id": 1697,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1481,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DefaultTerms",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1696,
        "linearizedBaseContracts": [
          1696
        ],
        "name": "DefaultTerms",
        "nameLocation": "70:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3c0cf8b4",
            "id": 1484,
            "mutability": "mutable",
            "name": "defaultTerms",
            "nameLocation": "106:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1696,
            "src": "90:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 1482,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "90:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 1483,
              "nodeType": "ArrayTypeName",
              "src": "90:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1685,
              "nodeType": "Block",
              "src": "141:5829:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c414e444c4f52443a205468652070617274792077686f206f776e73207468652070726f706572747920616e64206973206c656173696e6720697420746f207468652074656e616e742e",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "240:76:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6460563f6a8c3cff7403fa11dcac45f274b9b4b83e19e41cee2cdcd6144c57e2",
                          "typeString": "literal_string \"LANDLORD: The party who owns the property and is leasing it to the tenant.\""
                        },
                        "value": "LANDLORD: The party who owns the property and is leasing it to the tenant."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6460563f6a8c3cff7403fa11dcac45f274b9b4b83e19e41cee2cdcd6144c57e2",
                          "typeString": "literal_string \"LANDLORD: The party who owns the property and is leasing it to the tenant.\""
                        }
                      ],
                      "expression": {
                        "id": 1487,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "208:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "221:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "208:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "208:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "208:119:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54454e414e543a205468652070617274792077686f2069732072656e74696e67207468652070726f70657274792066726f6d20746865206c6573736f722e",
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "372:64:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d41ccc3998a6a1a549410c8fcbdaa6d4b18eaf88e8f10d3b10983195b199877",
                          "typeString": "literal_string \"TENANT: The party who is renting the property from the lessor.\""
                        },
                        "value": "TENANT: The party who is renting the property from the lessor."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d41ccc3998a6a1a549410c8fcbdaa6d4b18eaf88e8f10d3b10983195b199877",
                          "typeString": "literal_string \"TENANT: The party who is renting the property from the lessor.\""
                        }
                      ],
                      "expression": {
                        "id": 1493,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "340:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "353:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "340:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "340:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c45415345204455524154494f4e3a20546865206475726174696f6e20666f72207768696368207468652070726f7065727479206973206265696e67206c65617365642028652e672e2c203132206d6f6e746873292e",
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "492:88:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4bebb14a7f5d90a09d71b3c9735cacc871012ad50ca5f3596e788a51d9aa30b",
                          "typeString": "literal_string \"LEASE DURATION: The duration for which the property is being leased (e.g., 12 months).\""
                        },
                        "value": "LEASE DURATION: The duration for which the property is being leased (e.g., 12 months)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e4bebb14a7f5d90a09d71b3c9735cacc871012ad50ca5f3596e788a51d9aa30b",
                          "typeString": "literal_string \"LEASE DURATION: The duration for which the property is being leased (e.g., 12 months).\""
                        }
                      ],
                      "expression": {
                        "id": 1499,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "460:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "473:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "460:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:131:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "460:131:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "52454e5420414d4f554e543a2054686520616d6f756e742070616964206279207468652074656e616e7420746f20746865206c6573736f7220666f72207573696e67207468652070726f70657274792e",
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "636:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488a40aef9df10bdb93f4cf9d28f1ab892b83cb84794e48bcbf46b5feb3b1529",
                          "typeString": "literal_string \"RENT AMOUNT: The amount paid by the tenant to the lessor for using the property.\""
                        },
                        "value": "RENT AMOUNT: The amount paid by the tenant to the lessor for using the property."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_488a40aef9df10bdb93f4cf9d28f1ab892b83cb84794e48bcbf46b5feb3b1529",
                          "typeString": "literal_string \"RENT AMOUNT: The amount paid by the tenant to the lessor for using the property.\""
                        }
                      ],
                      "expression": {
                        "id": 1505,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "604:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "617:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "604:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "604:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "604:125:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "52454e54205041594d454e543a2054686520616d6f756e742070616964206279207468652074656e616e7420746f20746865206c6573736f72206d7573742062652070616964206f6e2074686520317374206f662065616368206d6f6e74682e",
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "774:98:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a839d4ac8779e8d18c813ee7859687bddf9fe2ac963870d3b9f2d47374e5875b",
                          "typeString": "literal_string \"RENT PAYMENT: The amount paid by the tenant to the lessor must be paid on the 1st of each month.\""
                        },
                        "value": "RENT PAYMENT: The amount paid by the tenant to the lessor must be paid on the 1st of each month."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a839d4ac8779e8d18c813ee7859687bddf9fe2ac963870d3b9f2d47374e5875b",
                          "typeString": "literal_string \"RENT PAYMENT: The amount paid by the tenant to the lessor must be paid on the 1st of each month.\""
                        }
                      ],
                      "expression": {
                        "id": 1511,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "742:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "755:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "742:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:141:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "742:141:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c4154452052454e543a205468657265206973206120677261636520706572696f64206f662031207765656b20666f72206c6174652072656e742c20616674657220776869636820612032252066696e65206d75737420626520616464656420746f207468652072656e7420616d6f756e742e",
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "928:117:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d894b1e9826ba29d51b149171fe3f37bbfba2bbbea582420bbcb5d2acb1c567a",
                          "typeString": "literal_string \"LATE RENT: There is a grace period of 1 week for late rent, after which a 2% fine must be added to the rent amount.\""
                        },
                        "value": "LATE RENT: There is a grace period of 1 week for late rent, after which a 2% fine must be added to the rent amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d894b1e9826ba29d51b149171fe3f37bbfba2bbbea582420bbcb5d2acb1c567a",
                          "typeString": "literal_string \"LATE RENT: There is a grace period of 1 week for late rent, after which a 2% fine must be added to the rent amount.\""
                        }
                      ],
                      "expression": {
                        "id": 1517,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "896:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "909:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "896:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:160:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "896:160:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5345435552495459204445504f5349543a204120726566756e6461626c6520616d6f756e742070616964206279207468652074656e616e7420617320736563757269747920616761696e73742064616d61676573206f7220756e706169642072656e742e",
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1101:102:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1216405755225f61ea350cb9fee00e5655fd0f45f127687689958f6259226d3e",
                          "typeString": "literal_string \"SECURITY DEPOSIT: A refundable amount paid by the tenant as security against damages or unpaid rent.\""
                        },
                        "value": "SECURITY DEPOSIT: A refundable amount paid by the tenant as security against damages or unpaid rent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1216405755225f61ea350cb9fee00e5655fd0f45f127687689958f6259226d3e",
                          "typeString": "literal_string \"SECURITY DEPOSIT: A refundable amount paid by the tenant as security against damages or unpaid rent.\""
                        }
                      ],
                      "expression": {
                        "id": 1523,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1069:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1082:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1069:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:145:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:145:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5554494c49544945533a20536572766963657320737563682061732077617465722c20656c6563747269636974792c20616e642067617320617265206e6f7420696e636c7564656420696e207468652072656e7420616d6f756e742e",
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1259:94:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b76365c58d08cd64feac594645a297b6476718fcbf7e91da6b8ba6eb44d7b77",
                          "typeString": "literal_string \"UTILITIES: Services such as water, electricity, and gas are not included in the rent amount.\""
                        },
                        "value": "UTILITIES: Services such as water, electricity, and gas are not included in the rent amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2b76365c58d08cd64feac594645a297b6476718fcbf7e91da6b8ba6eb44d7b77",
                          "typeString": "literal_string \"UTILITIES: Services such as water, electricity, and gas are not included in the rent amount.\""
                        }
                      ],
                      "expression": {
                        "id": 1529,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1227:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1240:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1227:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:137:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:137:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5554494c49544945533a20416c6c207574696c6974792073657276696365732062696c6c73206d7573742062652070616964206279207468652074656e616e742e",
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1409:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d9e39b09624ff591d000a7efc03f6498bfda30c88e6e346370c23ec2f9d1e95",
                          "typeString": "literal_string \"UTILITIES: All utility services bills must be paid by the tenant.\""
                        },
                        "value": "UTILITIES: All utility services bills must be paid by the tenant."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2d9e39b09624ff591d000a7efc03f6498bfda30c88e6e346370c23ec2f9d1e95",
                          "typeString": "literal_string \"UTILITIES: All utility services bills must be paid by the tenant.\""
                        }
                      ],
                      "expression": {
                        "id": 1535,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1377:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1390:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1377:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:110:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d41494e54454e414e43453a2054656e616e7420697320726573706f6e7369626c6520666f72206d696e6f72206d61696e74656e616e63652028652e672e2c206368616e67696e67206c696768742062756c62732c20726567756c617220636c65616e696e67292e",
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1532:106:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb2e2ca162016b88a5859ec39467a8100982658810babf8fae8f6740b4e110b",
                          "typeString": "literal_string \"MAINTENANCE: Tenant is responsible for minor maintenance (e.g., changing light bulbs, regular cleaning).\""
                        },
                        "value": "MAINTENANCE: Tenant is responsible for minor maintenance (e.g., changing light bulbs, regular cleaning)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dbb2e2ca162016b88a5859ec39467a8100982658810babf8fae8f6740b4e110b",
                          "typeString": "literal_string \"MAINTENANCE: Tenant is responsible for minor maintenance (e.g., changing light bulbs, regular cleaning).\""
                        }
                      ],
                      "expression": {
                        "id": 1541,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1500:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1513:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1500:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:149:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:149:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d41494e54454e414e43453a204c616e646c6f726420697320726573706f6e7369626c6520666f72206d616a6f72207265706169727320616e64206d61696e74656e616e63652028652e672e2c20706c756d62696e67206973737565732c207374727563747572616c2072657061697273292e",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1694:117:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f335dfd73b3e49c7a1775cccc4f71dc5b6ca470e304ade6cb53c825a36772dfc",
                          "typeString": "literal_string \"MAINTENANCE: Landlord is responsible for major repairs and maintenance (e.g., plumbing issues, structural repairs).\""
                        },
                        "value": "MAINTENANCE: Landlord is responsible for major repairs and maintenance (e.g., plumbing issues, structural repairs)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f335dfd73b3e49c7a1775cccc4f71dc5b6ca470e304ade6cb53c825a36772dfc",
                          "typeString": "literal_string \"MAINTENANCE: Landlord is responsible for major repairs and maintenance (e.g., plumbing issues, structural repairs).\""
                        }
                      ],
                      "expression": {
                        "id": 1547,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1662:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1675:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1662:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:160:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:160:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d41494e54454e414e43453a204120646973707574652063616e20626520726169736564206279207468652074656e616e7420616e64207265736f6c76656420627920746865206c616e646c6f7264207468726f7567682072656e74696e6720706f7274616c2e",
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:105:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c26e2d8b9ee825c73ce05ad1649cebbb2dc2452874d358578a70e49042c79bc9",
                          "typeString": "literal_string \"MAINTENANCE: A dispute can be raised by the tenant and resolved by the landlord through renting portal.\""
                        },
                        "value": "MAINTENANCE: A dispute can be raised by the tenant and resolved by the landlord through renting portal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c26e2d8b9ee825c73ce05ad1649cebbb2dc2452874d358578a70e49042c79bc9",
                          "typeString": "literal_string \"MAINTENANCE: A dispute can be raised by the tenant and resolved by the landlord through renting portal.\""
                        }
                      ],
                      "expression": {
                        "id": 1553,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1835:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1848:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1835:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:148:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:148:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5355424c454153494e473a2050726f7065727479206d757374206f6e6c79206265207573656420666f72207265736964656e7469616c20707572706f736573206f6e6c792c206e6f207375626c656173696e6720776974686f7574207065726d697373696f6e2e",
                        "id": 1562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2028:105:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c149693b013c3c7c581cec248b446d403fb870d479b68c366352b620dc7d6c9d",
                          "typeString": "literal_string \"SUBLEASING: Property must only be used for residential purposes only, no subleasing without permission.\""
                        },
                        "value": "SUBLEASING: Property must only be used for residential purposes only, no subleasing without permission."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c149693b013c3c7c581cec248b446d403fb870d479b68c366352b620dc7d6c9d",
                          "typeString": "literal_string \"SUBLEASING: Property must only be used for residential purposes only, no subleasing without permission.\""
                        }
                      ],
                      "expression": {
                        "id": 1559,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "1996:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2009:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1996:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:148:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:148:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "414c5445524154494f4e533a2054656e616e74206d757374206f627461696e207772697474656e207065726d697373696f6e2066726f6d20746865206c616e646c6f7264206265666f7265206d616b696e6720616e7920616c7465726174696f6e732c20696d70726f76656d656e74732c206f72206164646974696f6e7320746f207468652070726f70657274792e",
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2189:145:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b64802e8240a3ac20f145fbb5c4cb5d397d6b1350d4c485c6f4e71c2fb031087",
                          "typeString": "literal_string \"ALTERATIONS: Tenant must obtain written permission from the landlord before making any alterations, improvements, or additions to the property.\""
                        },
                        "value": "ALTERATIONS: Tenant must obtain written permission from the landlord before making any alterations, improvements, or additions to the property."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b64802e8240a3ac20f145fbb5c4cb5d397d6b1350d4c485c6f4e71c2fb031087",
                          "typeString": "literal_string \"ALTERATIONS: Tenant must obtain written permission from the landlord before making any alterations, improvements, or additions to the property.\""
                        }
                      ],
                      "expression": {
                        "id": 1565,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2157:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2170:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2157:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:188:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:188:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4755455354533a2054656e616e742061677265657320746f20626520726573706f6e7369626c6520666f722074686520636f6e64756374206f6620746865697220677565737473206f6e207468652070726f706572747920616e6420656e7375726573207468657920636f6d706c792077697468206c65617365207465726d732e",
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:131:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83950bbd275f36a3c757d62db7782626fd4ea0aa5552ae23d84966d538227f11",
                          "typeString": "literal_string \"GUESTS: Tenant agrees to be responsible for the conduct of their guests on the property and ensures they comply with lease terms.\""
                        },
                        "value": "GUESTS: Tenant agrees to be responsible for the conduct of their guests on the property and ensures they comply with lease terms."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_83950bbd275f36a3c757d62db7782626fd4ea0aa5552ae23d84966d538227f11",
                          "typeString": "literal_string \"GUESTS: Tenant agrees to be responsible for the conduct of their guests on the property and ensures they comply with lease terms.\""
                        }
                      ],
                      "expression": {
                        "id": 1571,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2358:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2371:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2358:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:174:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1576,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:174:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e4f54494345204f4620414253454e43453a2054656e616e742061677265657320746f206e6f7469667920746865206c616e646c6f726420696620746865792077696c6c20626520617761792066726f6d207468652070726f706572747920666f7220616e20657874656e64656420706572696f642e",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2577:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7627023038f42433062f4cb325522dc6367627b76619e6824d337c41421491cb",
                          "typeString": "literal_string \"NOTICE OF ABSENCE: Tenant agrees to notify the landlord if they will be away from the property for an extended period.\""
                        },
                        "value": "NOTICE OF ABSENCE: Tenant agrees to notify the landlord if they will be away from the property for an extended period."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7627023038f42433062f4cb325522dc6367627b76619e6824d337c41421491cb",
                          "typeString": "literal_string \"NOTICE OF ABSENCE: Tenant agrees to notify the landlord if they will be away from the property for an extended period.\""
                        }
                      ],
                      "expression": {
                        "id": 1577,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2545:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2558:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2545:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:163:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:163:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "454d455247454e435920434f4e54414354533a2054656e616e74206d7573742070726f7669646520656d657267656e637920636f6e7461637420696e666f726d6174696f6e2c207375636820617320612064657369676e6174656420706572736f6e20746f20726561636820696e2063617365206f6620656d657267656e636965732e",
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:133:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1f1ff8a3195a6d34003f1dc56bee3155336e6d8fc4e97e48f6d3c19978df512",
                          "typeString": "literal_string \"EMERGENCY CONTACTS: Tenant must provide emergency contact information, such as a designated person to reach in case of emergencies.\""
                        },
                        "value": "EMERGENCY CONTACTS: Tenant must provide emergency contact information, such as a designated person to reach in case of emergencies."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a1f1ff8a3195a6d34003f1dc56bee3155336e6d8fc4e97e48f6d3c19978df512",
                          "typeString": "literal_string \"EMERGENCY CONTACTS: Tenant must provide emergency contact information, such as a designated person to reach in case of emergencies.\""
                        }
                      ],
                      "expression": {
                        "id": 1583,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2721:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2734:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2721:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:176:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1588,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:176:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50524f50455254592044414d4147453a2054656e616e742061677265657320746f207265706f727420616e792064616d6167657320636175736564206279207468656d206f72207468656972206775657374732070726f6d70746c7920616e6420697320726573706f6e7369626c6520666f7220726570616972696e67206f72207265696d62757273696e6720746865206c616e646c6f726420666f7220737563682064616d616765732e",
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:173:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00f63a4954dce2781e936527479bb6b9586550e540da814ec334e96ba39ab64f",
                          "typeString": "literal_string \"PROPERTY DAMAGE: Tenant agrees to report any damages caused by them or their guests promptly and is responsible for repairing or reimbursing the landlord for such damages.\""
                        },
                        "value": "PROPERTY DAMAGE: Tenant agrees to report any damages caused by them or their guests promptly and is responsible for repairing or reimbursing the landlord for such damages."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_00f63a4954dce2781e936527479bb6b9586550e540da814ec334e96ba39ab64f",
                          "typeString": "literal_string \"PROPERTY DAMAGE: Tenant agrees to report any damages caused by them or their guests promptly and is responsible for repairing or reimbursing the landlord for such damages.\""
                        }
                      ],
                      "expression": {
                        "id": 1589,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2910:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2923:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2910:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:216:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:216:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "574153544520444953504f53414c3a2054656e616e742061677265657320746f20646973706f7365206f662077617374652070726f7065726c792c20666f6c6c6f77696e67206c6f63616c206f7264696e616e63657320616e642072656379636c696e672067756964656c696e65732e",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3171:114:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eff67b7174bf536cc0bf003b50defffc321f61b1ff7c6dee5b25a9af928f408b",
                          "typeString": "literal_string \"WASTE DISPOSAL: Tenant agrees to dispose of waste properly, following local ordinances and recycling guidelines.\""
                        },
                        "value": "WASTE DISPOSAL: Tenant agrees to dispose of waste properly, following local ordinances and recycling guidelines."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_eff67b7174bf536cc0bf003b50defffc321f61b1ff7c6dee5b25a9af928f408b",
                          "typeString": "literal_string \"WASTE DISPOSAL: Tenant agrees to dispose of waste properly, following local ordinances and recycling guidelines.\""
                        }
                      ],
                      "expression": {
                        "id": 1595,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3139:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3152:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3139:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3139:157:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "3139:157:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "46495245205341464554593a2054656e616e742061677265657320746f20666f6c6c6f7720666972652073616665747920726567756c6174696f6e732c2073756368206173206e6f7420626c6f636b696e672065786974732c206b656570696e6720736d6f6b65206465746563746f7273206f7065726174696f6e616c2c20616e64206e6f742074616d706572696e6720776974682066697265207361666574792065717569706d656e742e",
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3341:174:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05a28a6a69d3ab568a424d5db8f665211d0d19b48048de52ec26ba9867bc88c5",
                          "typeString": "literal_string \"FIRE SAFETY: Tenant agrees to follow fire safety regulations, such as not blocking exits, keeping smoke detectors operational, and not tampering with fire safety equipment.\""
                        },
                        "value": "FIRE SAFETY: Tenant agrees to follow fire safety regulations, such as not blocking exits, keeping smoke detectors operational, and not tampering with fire safety equipment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_05a28a6a69d3ab568a424d5db8f665211d0d19b48048de52ec26ba9867bc88c5",
                          "typeString": "literal_string \"FIRE SAFETY: Tenant agrees to follow fire safety regulations, such as not blocking exits, keeping smoke detectors operational, and not tampering with fire safety equipment.\""
                        }
                      ],
                      "expression": {
                        "id": 1601,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3309:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3322:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3309:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:217:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1606,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:217:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "484f5553494e4720434f444520434f4d504c49414e43453a204c616e646c6f7264206167726565732074686174207468652070726f706572747920636f6d706c696573207769746820616c6c206170706c696361626c6520686f7573696e6720636f64657320616e6420726567756c6174696f6e732e",
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3571:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6876821857c9f77a844273b189f3e9e8f897d21ce663ac6dda46b42b9fbafb0",
                          "typeString": "literal_string \"HOUSING CODE COMPLIANCE: Landlord agrees that the property complies with all applicable housing codes and regulations.\""
                        },
                        "value": "HOUSING CODE COMPLIANCE: Landlord agrees that the property complies with all applicable housing codes and regulations."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d6876821857c9f77a844273b189f3e9e8f897d21ce663ac6dda46b42b9fbafb0",
                          "typeString": "literal_string \"HOUSING CODE COMPLIANCE: Landlord agrees that the property complies with all applicable housing codes and regulations.\""
                        }
                      ],
                      "expression": {
                        "id": 1607,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3539:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3552:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3539:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3539:163:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1612,
                  "nodeType": "ExpressionStatement",
                  "src": "3539:163:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "454e5452593a204c616e646c6f7264206861732074686520726967687420746f20656e746572207468652070726f706572747920666f7220696e7370656374696f6e732c20726570616972732c206f722073686f77696e67732c20776974682031207765656b206e6f746963652e",
                        "id": 1616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3747:112:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8725bd32f09bd65c8f47cf700d1289b11f1999ffd99177ce611c58d3f2afab0e",
                          "typeString": "literal_string \"ENTRY: Landlord has the right to enter the property for inspections, repairs, or showings, with 1 week notice.\""
                        },
                        "value": "ENTRY: Landlord has the right to enter the property for inspections, repairs, or showings, with 1 week notice."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8725bd32f09bd65c8f47cf700d1289b11f1999ffd99177ce611c58d3f2afab0e",
                          "typeString": "literal_string \"ENTRY: Landlord has the right to enter the property for inspections, repairs, or showings, with 1 week notice.\""
                        }
                      ],
                      "expression": {
                        "id": 1613,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3715:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3728:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3715:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:155:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:155:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5445524d494e4154494f4e3a20436f6e646974696f6e7320756e64657220776869636820746865206c656173652063616e206265207465726d696e61746564206279206569746865722070617274792e",
                        "id": 1622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3915:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e1134e0c74377298f94eb0a222f3c5450c315920cb4a056ae605d00c10bc28f",
                          "typeString": "literal_string \"TERMINATION: Conditions under which the lease can be terminated by either party.\""
                        },
                        "value": "TERMINATION: Conditions under which the lease can be terminated by either party."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6e1134e0c74377298f94eb0a222f3c5450c315920cb4a056ae605d00c10bc28f",
                          "typeString": "literal_string \"TERMINATION: Conditions under which the lease can be terminated by either party.\""
                        }
                      ],
                      "expression": {
                        "id": 1619,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3883:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3896:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3883:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1624,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:125:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c414e444c4f5244204541524c59205445524d494e4154494f4e3a204966206c616e646c6f7264207465726d696e61746573207468652061677265656d656e74206265666f7265207465726d696e6174696f6e20646174652c207468652074656e616e742077696c6c20626520616c6c6f77656420746f2073746179206f6e207468652070726f706572747920666f722031206d6f6e74682072656e742066726565206265666f7265206d6f76696e67206f75742e",
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4053:183:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2bdb1aced54f65b7ee708b887c4125a6ad47447b46dfbe6f0efa9ae2b39b6fc",
                          "typeString": "literal_string \"LANDLORD EARLY TERMINATION: If landlord terminates the agreement before termination date, the tenant will be allowed to stay on the property for 1 month rent free before moving out.\""
                        },
                        "value": "LANDLORD EARLY TERMINATION: If landlord terminates the agreement before termination date, the tenant will be allowed to stay on the property for 1 month rent free before moving out."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b2bdb1aced54f65b7ee708b887c4125a6ad47447b46dfbe6f0efa9ae2b39b6fc",
                          "typeString": "literal_string \"LANDLORD EARLY TERMINATION: If landlord terminates the agreement before termination date, the tenant will be allowed to stay on the property for 1 month rent free before moving out.\""
                        }
                      ],
                      "expression": {
                        "id": 1625,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4021:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4034:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4021:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:226:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:226:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54454e414e54204541524c59205445524d494e4154494f4e3a2049662074656e616e74207465726d696e61746573207468652061677265656d656e74206265666f7265207465726d696e6174696f6e20646174652c20746865206c616e646c6f726420697320656e7469746c656420746f2031206d6f6e74682072656e742077686963682069732064656475637465642066726f6d20746865207365637572697479206465706f7369742e",
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4292:173:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07677c3a2a007ea31ed258a0bb907214ec286f50ab5a9e41fd748e4e08c92a16",
                          "typeString": "literal_string \"TENANT EARLY TERMINATION: If tenant terminates the agreement before termination date, the landlord is entitled to 1 month rent which is deducted from the security deposit.\""
                        },
                        "value": "TENANT EARLY TERMINATION: If tenant terminates the agreement before termination date, the landlord is entitled to 1 month rent which is deducted from the security deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_07677c3a2a007ea31ed258a0bb907214ec286f50ab5a9e41fd748e4e08c92a16",
                          "typeString": "literal_string \"TENANT EARLY TERMINATION: If tenant terminates the agreement before termination date, the landlord is entitled to 1 month rent which is deducted from the security deposit.\""
                        }
                      ],
                      "expression": {
                        "id": 1631,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4260:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4273:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4260:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:216:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:216:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "52454e4557414c3a204166746572207465726d696e6174696f6e2064617465206120636f6e7472616374206d61792062652072656e65776564206279207468652074656e616e74206279207265626f6f6b696e67207468652070726f70657274792e",
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4521:100:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b84050dad767306fdd1da9f53890b13ece71cdc343a9624e5e91f9084915f56f",
                          "typeString": "literal_string \"RENEWAL: After termination date a contract may be renewed by the tenant by rebooking the property.\""
                        },
                        "value": "RENEWAL: After termination date a contract may be renewed by the tenant by rebooking the property."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b84050dad767306fdd1da9f53890b13ece71cdc343a9624e5e91f9084915f56f",
                          "typeString": "literal_string \"RENEWAL: After termination date a contract may be renewed by the tenant by rebooking the property.\""
                        }
                      ],
                      "expression": {
                        "id": 1637,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4489:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4502:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4489:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:143:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1642,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:143:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50524f504552545920464f522053414c453a2054656e616e742061677265657320746f20616c6c6f77207468652070726f706572747920746f2062652073686f776e20746f20706f74656e7469616c20627579657273206f722072656e7465727320776974682031206d6f6e7468206e6f7469636520616e642072656e74206672656520737461792c2066726f6d20746865206c616e646c6f72642e",
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4677:158:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9edbe1402050711349618092bada210b4929dd8bb992a6e33856f33ae4b5aab9",
                          "typeString": "literal_string \"PROPERTY FOR SALE: Tenant agrees to allow the property to be shown to potential buyers or renters with 1 month notice and rent free stay, from the landlord.\""
                        },
                        "value": "PROPERTY FOR SALE: Tenant agrees to allow the property to be shown to potential buyers or renters with 1 month notice and rent free stay, from the landlord."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9edbe1402050711349618092bada210b4929dd8bb992a6e33856f33ae4b5aab9",
                          "typeString": "literal_string \"PROPERTY FOR SALE: Tenant agrees to allow the property to be shown to potential buyers or renters with 1 month notice and rent free stay, from the landlord.\""
                        }
                      ],
                      "expression": {
                        "id": 1643,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4645:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4658:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4645:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4645:201:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "4645:201:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e4f4e2d4449534352494d494e4154494f4e3a20426f7468207061727469657320616772656520746f20636f6d706c792077697468206661697220686f7573696e67206c61777320616e64206e6f74206469736372696d696e617465206261736564206f6e20726163652c20636f6c6f722c2072656c6967696f6e2c207365782c206e6174696f6e616c206f726967696e2c206469736162696c6974792c206f722066616d696c69616c207374617475732e",
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:180:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f32e23434df66775a876f1d81b706c89dbe65a6e3ece2dabea292e5fb2730436",
                          "typeString": "literal_string \"NON-DISCRIMINATION: Both parties agree to comply with fair housing laws and not discriminate based on race, color, religion, sex, national origin, disability, or familial status.\""
                        },
                        "value": "NON-DISCRIMINATION: Both parties agree to comply with fair housing laws and not discriminate based on race, color, religion, sex, national origin, disability, or familial status."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f32e23434df66775a876f1d81b706c89dbe65a6e3ece2dabea292e5fb2730436",
                          "typeString": "literal_string \"NON-DISCRIMINATION: Both parties agree to comply with fair housing laws and not discriminate based on race, color, religion, sex, national origin, disability, or familial status.\""
                        }
                      ],
                      "expression": {
                        "id": 1649,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4859:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4872:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4859:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:223:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "4859:223:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e4f544943452044454c49564552593a204e6f746963657320616e6420636f6d6d756e69636174696f6e73206265747765656e206c616e646c6f726420616e642074656e616e742063616e2062652064656c69766572656420696e20706572736f6e2c206279206d61696c2c206f7220656c656374726f6e6963616c6c792e",
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5127:129:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9b4993e69d19901b5bd9a4b542a8c8c96653067f1ab87c87ae84fe26b483553",
                          "typeString": "literal_string \"NOTICE DELIVERY: Notices and communications between landlord and tenant can be delivered in person, by mail, or electronically.\""
                        },
                        "value": "NOTICE DELIVERY: Notices and communications between landlord and tenant can be delivered in person, by mail, or electronically."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f9b4993e69d19901b5bd9a4b542a8c8c96653067f1ab87c87ae84fe26b483553",
                          "typeString": "literal_string \"NOTICE DELIVERY: Notices and communications between landlord and tenant can be delivered in person, by mail, or electronically.\""
                        }
                      ],
                      "expression": {
                        "id": 1655,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5095:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5108:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5095:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5095:172:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1660,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:172:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e4f5449434520504552494f443a2041206e6f7469636520706572696f64206f662031206d6f6e7468206d75737420626520697373756564206265666f7265207465726d696e6174696e6720746865206c6561736520627920626f7468206c616e646c6f726420616e642074656e616e742e",
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5312:116:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c072ab13022c89d41ed5faee74d63eba949f496ccecdbb24cb6bfbb9a386e2c7",
                          "typeString": "literal_string \"NOTICE PERIOD: A notice period of 1 month must be issued before terminating the lease by both landlord and tenant.\""
                        },
                        "value": "NOTICE PERIOD: A notice period of 1 month must be issued before terminating the lease by both landlord and tenant."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c072ab13022c89d41ed5faee74d63eba949f496ccecdbb24cb6bfbb9a386e2c7",
                          "typeString": "literal_string \"NOTICE PERIOD: A notice period of 1 month must be issued before terminating the lease by both landlord and tenant.\""
                        }
                      ],
                      "expression": {
                        "id": 1661,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5280:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5293:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5280:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:159:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1666,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:159:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e4f54494345204f462053414c453a2054656e616e74206d757374206265206e6f74696669656420696e20616476616e6365206966207468652070726f7065727479206973206265696e6720736f6c642c20776974682064657461696c73206f6e20746865206e6577206f776e6572277320726573706f6e736962696c69746965732e",
                        "id": 1670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5484:133:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_438ab95663eac0497f0edd1e4edc25d6366304f330f1328c76c2dbd9cf3a31bd",
                          "typeString": "literal_string \"NOTICE OF SALE: Tenant must be notified in advance if the property is being sold, with details on the new owner's responsibilities.\""
                        },
                        "value": "NOTICE OF SALE: Tenant must be notified in advance if the property is being sold, with details on the new owner's responsibilities."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_438ab95663eac0497f0edd1e4edc25d6366304f330f1328c76c2dbd9cf3a31bd",
                          "typeString": "literal_string \"NOTICE OF SALE: Tenant must be notified in advance if the property is being sold, with details on the new owner's responsibilities.\""
                        }
                      ],
                      "expression": {
                        "id": 1667,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5452:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5465:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5452:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5452:176:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "5452:176:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5349474e4154555245533a20426f74682070617274696573206d75737420617070726f7665207468652061677265656d656e7420746f206d616b65206974206c6567616c6c792062696e64696e672e",
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5673:81:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37d13610b6630c8cbeb41c605adade9815fefbf8315cc8b912bb45148ebb6ed7",
                          "typeString": "literal_string \"SIGNATURES: Both parties must approve the agreement to make it legally binding.\""
                        },
                        "value": "SIGNATURES: Both parties must approve the agreement to make it legally binding."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37d13610b6630c8cbeb41c605adade9815fefbf8315cc8b912bb45148ebb6ed7",
                          "typeString": "literal_string \"SIGNATURES: Both parties must approve the agreement to make it legally binding.\""
                        }
                      ],
                      "expression": {
                        "id": 1673,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5641:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5654:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5641:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5641:124:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1678,
                  "nodeType": "ExpressionStatement",
                  "src": "5641:124:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "454e544952452041475245454d454e543a205468697320636f6e747261637420636f6e73746974757465732074686520656e746972652061677265656d656e74206265747765656e20746865207061727469657320616e64207375706572736564657320616e79207072696f722061677265656d656e7473206f7220756e6465727374616e64696e67732e",
                        "id": 1682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:141:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4947f37ae4bf1336a0fb995b5c24c115b22f96b2adf6f1771d4d4fdc4697adfb",
                          "typeString": "literal_string \"ENTIRE AGREEMENT: This contract constitutes the entire agreement between the parties and supersedes any prior agreements or understandings.\""
                        },
                        "value": "ENTIRE AGREEMENT: This contract constitutes the entire agreement between the parties and supersedes any prior agreements or understandings."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4947f37ae4bf1336a0fb995b5c24c115b22f96b2adf6f1771d4d4fdc4697adfb",
                          "typeString": "literal_string \"ENTIRE AGREEMENT: This contract constitutes the entire agreement between the parties and supersedes any prior agreements or understandings.\""
                        }
                      ],
                      "expression": {
                        "id": 1679,
                        "name": "defaultTerms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5778:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5791:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5778:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5778:184:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1684,
                  "nodeType": "ExpressionStatement",
                  "src": "5778:184:1"
                }
              ]
            },
            "id": 1686,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "138:2:1"
            },
            "returnParameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:0:1"
            },
            "scope": 1696,
            "src": "127:5843:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1694,
              "nodeType": "Block",
              "src": "6045:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 1692,
                    "name": "defaultTerms",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1484,
                    "src": "6063:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1691,
                  "id": 1693,
                  "nodeType": "Return",
                  "src": "6056:19:1"
                }
              ]
            },
            "functionSelector": "c6418ab9",
            "id": 1695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultTerms",
            "nameLocation": "5987:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6002:2:1"
            },
            "returnParameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1695,
                  "src": "6028:15:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1688,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6028:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1689,
                    "nodeType": "ArrayTypeName",
                    "src": "6028:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6027:17:1"
            },
            "scope": 1696,
            "src": "5978:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1697,
        "src": "61:6025:1",
        "usedErrors": []
      }
    ],
    "src": "33:6055:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5B916a9ec168E57E9cd9447959EA5CF3317Fb3b2",
      "transactionHash": "0xcf4a2d9593112b363f726378101e2b2b2918067c4bb06091d7126054ed04a8f6"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-03-29T02:47:45.066Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}